{"version":3,"sources":["/source/gchart_renderers.coffee","gchart_renderers.min.js"],"names":["callWithJQuery","hasProp","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataA","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","k","len","len1","numCharsInHAxis","options","ref","result","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","wrapper","x","y","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","valAttrs","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","hAxis","slantedText","vAxis","legend","position","colors","tooltip","textStyle","fontSize","minValue","chartArea","left","top","setColumnLabel","isStacked","call","color","console","log","region","resolution","displayMode","colorAxis","css","padding","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","pivotUtilities","gchart_renderers","Line Chart","Pie Chart","Bar Chart","Stacked Bar Chart","Column Chart","Stacked Column Chart","Area Chart","Scatter Chart","Geographic Chart - Brazil","Geographic Chart - South America","Geographic Chart - World","this"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n        \ncallWithJQuery ($) ->\n\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                vs: \"vs\"\n                by: \"by\"\n            gchart: {}\n\n        opts = $.extend true, defaults, opts\n        opts.gchart.width ?= window.innerWidth / 1.4\n        opts.gchart.height ?= window.innerHeight / 1.4\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        fullAggName = pivotData.aggregatorName \n        if pivotData.valAttrs.length\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n        headers = (h.join(\"-\") for h in rowKeys)\n        headers.unshift \"\"\n\n        numCharsInHAxis = 0\n        if chartType == \"ScatterChart\"\n            dataArray = []\n            for y, tree2 of pivotData.tree\n                for x, agg of tree2\n                     dataArray.push [\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+\": \\n\"+agg.format(agg.value())\n                        ]\n            dataTable = new google.visualization.DataTable()\n            dataTable.addColumn 'number', pivotData.colAttrs.join(\"-\")\n            dataTable.addColumn 'number', pivotData.rowAttrs.join(\"-\") \n            dataTable.addColumn type: \"string\", role: \"tooltip\"\n            dataTable.addRows dataArray\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\n            vAxisTitle = pivotData.rowAttrs.join(\"-\")\n            title = \"\"\n        else\n            dataArray = [headers]\n            for colKey in colKeys\n                row = [colKey.join(\"-\")]\n                numCharsInHAxis += row[0].length\n                for rowKey in rowKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        val = agg.value()\n                        if $.isNumeric val\n                            if val < 1\n                                row.push parseFloat(val.toPrecision(3))\n                            else\n                                row.push parseFloat(val.toFixed(3))\n                        else\n                            row.push val\n                    else row.push null\n                dataArray.push row\n\n            dataTable = google.visualization.arrayToDataTable(dataArray)\n\n            title = vAxisTitle = fullAggName\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\n            title += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            groupByTitle = pivotData.rowAttrs.join(\"-\")\n            title += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n        options = \n            title: title\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50}\n            vAxis: {title: vAxisTitle}\n            legend: {position: 'right'}\n            width: \"100%\"\n            height: \"100%\"\n            colors: ['#84B2CC', '#0099C6','#FF9900','#109618','#990099','#3B3EAC','#DD4477','#66AA00','#B82E2E','#316395','#994499','#22AA99','#AAAA11','#E67300','#8B0707','#329262','#5574A6',],\n            tooltip: { \n                textStyle:{ \n                    fontSize: 12\n                }\n            }\n            textStyle:{ \n                fontSize: 10\n            }\n\n        if chartType == \"ColumnChart\"\n            options.vAxis.minValue = 0\n\n        if chartType == \"ScatterChart\"\n            options.legend = position: \"none\"\n            options.chartArea = {'width': '100%', 'height': '100%'}\n\n        if chartType == \"LineChart\"\n            options.chartArea = {\n             'width': '80%',\n             'left':'10%',\n             'height': '70%',\n             'top':'5%'\n            }\n            options.width = \"100%\"\n\n        if chartType == \"PieChart\"\n            options.legend = {position: 'right'};\n            options.chartArea = {\n                'width': '90%',\n                'height': '90%'\n            }\n            dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"))\n            dataTable.setColumnLabel(1, pivotData.valAttrs.join(\"-\"))\n\n        if chartType == \"BarChart\"\n            options.legend = 'right';\n            options.chartArea = {\n                'width': '70%',\n                'left':'15%',\n                'height': '90%'\n            }\n            options.vAxis = {\n                'title': hAxisTitle,\n                'slantedText': numCharsInHAxis > 50\n            }\n            options.hAxis = {\n                'title': vAxisTitle\n            }\n\n            if not extraOptions.isStacked\n\n                for own i, dataA of dataArray\n                    if i > 0\n                        dataArray[i][1] = parseFloat(parseFloat(dataArray[i][1]*100).toFixed(2))\n                        dataArray[i].push(dataArray[i][1] + \"%\")\n                    else\n                        dataArray[0].push({ role: 'annotation' })\n                \n            dataTable = google.visualization.arrayToDataTable(dataArray);\n\n        if chartType == \"AreaChart\"\n            options.chartArea = {\n                'width': '70%',\n                'left':'5%',\n                'height': '70%',\n                'top':'5%'\n            }\n            options.width = \"100%\"\n            options.legend = {position: \"right\"}\n            options.isStacked = true\n\n        if chartType == \"GeoChart\"\n            options.legend = {textStyle: {color: '#3E718E', fontSize: 12}}\n            console.log(extraOptions)\n            options.region = extraOptions.region\n            if options.region == 'BR'\n                options.resolution = 'provinces'\n            options.displayMode = 'regions'\n            options.colors = [\"#3E718E\"]\n            options.colorAxis = {colors:['#F5F5F5','#3E718E'], minValue: 0}\n\n            dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"))\n            dataTable.setColumnLabel(0, pivotData.valAttrs.join(\"-\"))\n        \n        \n\n        else if dataArray[0].length == 2 and dataArray[0][1] ==  \"\"\n            options.legend = position: \"none\"\n\n\n        \n        $.extend options, opts.gchart, extraOptions\n\n        result = $(\"<div>\").css(height: \"100%\")\n\n        if chartType != \"BarChart\"\n            result = $(\"<div>\").css({\n              width: \"100%\",\n              height: \"100%\",\n              padding: \"0 !important\"\n            })\n        dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"))\n        \n        if chartType == \"LineChart\" || chartType == \"AreaChart\" \n            result = $(\"<div>\").css({\n              width: \"100%\",\n              height: \"100%\",\n              padding: \"0 !important\"\n            })\n\n        wrapper = new google.visualization.ChartWrapper {dataTable, chartType, options}\n        wrapper.draw(result[0])    \n        result.bind \"dblclick\", -> \n            editor = new google.visualization.ChartEditor()\n            google.visualization.events.addListener editor, 'ok', -> \n                editor.getChartWrapper().draw(result[0])\n            editor.openDialog(wrapper)\n        return result\n\n    $.pivotUtilities.gchart_renderers = \n        \"Line Chart\": makeGoogleChart(\"LineChart\")\n        \"Pie Chart\": makeGoogleChart(\"PieChart\")\n        \"Bar Chart\": makeGoogleChart(\"BarChart\")\n        \"Stacked Bar Chart\": makeGoogleChart(\"BarChart\", isStacked: true)\n        \"Column Chart\": makeGoogleChart(\"ColumnChart\")\n        \"Stacked Column Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n        \"Geographic Chart - Brazil\": makeGoogleChart(\"GeoChart\", {region: 'BR'}, false),\n        \"Geographic Chart - South America\": makeGoogleChart(\"GeoChart\", {region: '005'}, false),\n        \"Geographic Chart - World\": makeGoogleChart(\"GeoChart\", {region: 'world'}, false),\n","(function() {\n  var callWithJQuery,\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var makeGoogleChart;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var agg, base, base1, colKey, colKeys, dataA, dataArray, dataTable, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, k, len, len1, numCharsInHAxis, options, ref, result, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, wrapper, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        if ((base1 = opts.gchart).height == null) {\n          base1.height = window.innerHeight / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var j, len, results;\n          results = [];\n          for (j = 0, len = rowKeys.length; j < len; j++) {\n            h = rowKeys[j];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n          dataArray = [];\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n            }\n          }\n          dataTable = new google.visualization.DataTable();\n          dataTable.addColumn('number', pivotData.colAttrs.join(\"-\"));\n          dataTable.addColumn('number', pivotData.rowAttrs.join(\"-\"));\n          dataTable.addColumn({\n            type: \"string\",\n            role: \"tooltip\"\n          });\n          dataTable.addRows(dataArray);\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          vAxisTitle = pivotData.rowAttrs.join(\"-\");\n          title = \"\";\n        } else {\n          dataArray = [headers];\n          for (j = 0, len = colKeys.length; j < len; j++) {\n            colKey = colKeys[j];\n            row = [colKey.join(\"-\")];\n            numCharsInHAxis += row[0].length;\n            for (k = 0, len1 = rowKeys.length; k < len1; k++) {\n              rowKey = rowKeys[k];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                val = agg.value();\n                if ($.isNumeric(val)) {\n                  if (val < 1) {\n                    row.push(parseFloat(val.toPrecision(3)));\n                  } else {\n                    row.push(parseFloat(val.toFixed(3)));\n                  }\n                } else {\n                  row.push(val);\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            dataArray.push(row);\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n          title = vAxisTitle = fullAggName;\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          if (hAxisTitle !== \"\") {\n            title += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          groupByTitle = pivotData.rowAttrs.join(\"-\");\n          if (groupByTitle !== \"\") {\n            title += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n        }\n        options = {\n          title: title,\n          hAxis: {\n            title: hAxisTitle,\n            slantedText: numCharsInHAxis > 50\n          },\n          vAxis: {\n            title: vAxisTitle\n          },\n          legend: {\n            position: 'right'\n          },\n          width: \"100%\",\n          height: \"100%\",\n          colors: ['#84B2CC', '#0099C6', '#FF9900', '#109618', '#990099', '#3B3EAC', '#DD4477', '#66AA00', '#B82E2E', '#316395', '#994499', '#22AA99', '#AAAA11', '#E67300', '#8B0707', '#329262', '#5574A6'],\n          tooltip: {\n            textStyle: {\n              fontSize: 12\n            }\n          },\n          textStyle: {\n            fontSize: 10\n          }\n        };\n        if (chartType === \"ColumnChart\") {\n          options.vAxis.minValue = 0;\n        }\n        if (chartType === \"ScatterChart\") {\n          options.legend = {\n            position: \"none\"\n          };\n          options.chartArea = {\n            'width': '100%',\n            'height': '100%'\n          };\n        }\n        if (chartType === \"LineChart\") {\n          options.chartArea = {\n            'width': '80%',\n            'left': '10%',\n            'height': '70%',\n            'top': '5%'\n          };\n          options.width = \"100%\";\n        }\n        if (chartType === \"PieChart\") {\n          options.legend = {\n            position: 'right'\n          };\n          options.chartArea = {\n            'width': '90%',\n            'height': '90%'\n          };\n          dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"));\n          dataTable.setColumnLabel(1, pivotData.valAttrs.join(\"-\"));\n        }\n        if (chartType === \"BarChart\") {\n          options.legend = 'right';\n          options.chartArea = {\n            'width': '70%',\n            'left': '15%',\n            'height': '90%'\n          };\n          options.vAxis = {\n            'title': hAxisTitle,\n            'slantedText': numCharsInHAxis > 50\n          };\n          options.hAxis = {\n            'title': vAxisTitle\n          };\n          if (!extraOptions.isStacked) {\n            for (i in dataArray) {\n              if (!hasProp.call(dataArray, i)) continue;\n              dataA = dataArray[i];\n              if (i > 0) {\n                dataArray[i][1] = parseFloat(parseFloat(dataArray[i][1] * 100).toFixed(2));\n                dataArray[i].push(dataArray[i][1] + \"%\");\n              } else {\n                dataArray[0].push({\n                  role: 'annotation'\n                });\n              }\n            }\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n        }\n        if (chartType === \"AreaChart\") {\n          options.chartArea = {\n            'width': '70%',\n            'left': '5%',\n            'height': '70%',\n            'top': '5%'\n          };\n          options.width = \"100%\";\n          options.legend = {\n            position: \"right\"\n          };\n          options.isStacked = true;\n        }\n        if (chartType === \"GeoChart\") {\n          options.legend = {\n            textStyle: {\n              color: '#3E718E',\n              fontSize: 12\n            }\n          };\n          console.log(extraOptions);\n          options.region = extraOptions.region;\n          if (options.region === 'BR') {\n            options.resolution = 'provinces';\n          }\n          options.displayMode = 'regions';\n          options.colors = [\"#3E718E\"];\n          options.colorAxis = {\n            colors: ['#F5F5F5', '#3E718E'],\n            minValue: 0\n          };\n          dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"));\n          dataTable.setColumnLabel(0, pivotData.valAttrs.join(\"-\"));\n        } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n          options.legend = {\n            position: \"none\"\n          };\n        }\n        $.extend(options, opts.gchart, extraOptions);\n        result = $(\"<div>\").css({\n          height: \"100%\"\n        });\n        if (chartType !== \"BarChart\") {\n          result = $(\"<div>\").css({\n            width: \"100%\",\n            height: \"100%\",\n            padding: \"0 !important\"\n          });\n        }\n        dataTable.setColumnLabel(0, pivotData.colAttrs.join(\"-\"));\n        if (chartType === \"LineChart\" || chartType === \"AreaChart\") {\n          result = $(\"<div>\").css({\n            width: \"100%\",\n            height: \"100%\",\n            padding: \"0 !important\"\n          });\n        }\n        wrapper = new google.visualization.ChartWrapper({\n          dataTable: dataTable,\n          chartType: chartType,\n          options: options\n        });\n        wrapper.draw(result[0]);\n        result.bind(\"dblclick\", function() {\n          var editor;\n          editor = new google.visualization.ChartEditor();\n          google.visualization.events.addListener(editor, 'ok', function() {\n            return editor.getChartWrapper().draw(result[0]);\n          });\n          return editor.openDialog(wrapper);\n        });\n        return result;\n      };\n    };\n    return $.pivotUtilities.gchart_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Pie Chart\": makeGoogleChart(\"PieChart\"),\n      \"Bar Chart\": makeGoogleChart(\"BarChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"BarChart\", {\n        isStacked: true\n      }),\n      \"Column Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Column Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\"),\n      \"Geographic Chart - Brazil\": makeGoogleChart(\"GeoChart\", {\n        region: 'BR'\n      }, false),\n      \"Geographic Chart - South America\": makeGoogleChart(\"GeoChart\", {\n        region: '005'\n      }, false),\n      \"Geographic Chart - World\": makeGoogleChart(\"GeoChart\", {\n        region: 'world'\n      }, false)\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=gchart_renderers.js.map\n"],"sourceRoot":"/source/"}